# 
# Synthesis run script generated by Vivado
# 

proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
create_project -in_memory -part xcku040-ffva1156-2-e

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_msg_config -source 4 -id {IP_Flow 19-2162} -severity warning -new_severity info
set_property webtalk.parent_dir C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.cache/wt [current_project]
set_property parent.project_path C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.xpr [current_project]
set_property XPM_LIBRARIES {XPM_CDC XPM_MEMORY} [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property board_part xilinx.com:kcu105:part0:1.2 [current_project]
set_property ip_output_repo c:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
read_verilog C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/clogb2.txt
set_property file_type "Verilog Header" [get_files C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/clogb2.txt]
read_verilog -library xil_defaultlib {
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/clk_div.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/clk_gen.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/clkx_bus.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/cmd_parse.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/dac_spi.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/debouncer.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/lb_ctl.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/meta_harden.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/out_ddr_flop.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/reset_bridge.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/resp_gen.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/rst_gen.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/samp_gen.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/samp_ram.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/to_bcd.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/uart_baud_gen.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/uart_rx.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/uart_rx_ctl.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/uart_tx.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/uart_tx_ctl.v
  C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/imports/verilog/wave_gen.v
}
read_ip -quiet C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/ip/clk_core/clk_core.xci
set_property used_in_implementation false [get_files -all c:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/ip/clk_core/clk_core_board.xdc]
set_property used_in_implementation false [get_files -all c:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/ip/clk_core/clk_core_ooc.xdc]

read_ip -quiet C:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/ip/char_fifo/char_fifo.xci
set_property used_in_implementation false [get_files -all c:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/ip/char_fifo/char_fifo_clocks.xdc]
set_property used_in_implementation false [get_files -all c:/2018.1/S.P/training/ClkConstr_Intro/demo/KCU105/verilog/wave_gen.srcs/sources_1/ip/char_fifo/char_fifo_ooc.xdc]

# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
set_param ips.enableIPCacheLiteLoad 0
close [open __synthesis_is_running__ w]

synth_design -top wave_gen -part xcku040-ffva1156-2-e -flatten_hierarchy none


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef wave_gen.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file wave_gen_utilization_synth.rpt -pb wave_gen_utilization_synth.pb"
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
